{"remainingRequest":"G:\\VueAllprojects\\practicevue\\copyvrent6\\vlogin2\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!G:\\VueAllprojects\\practicevue\\copyvrent6\\vlogin2\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!G:\\VueAllprojects\\practicevue\\copyvrent6\\vlogin2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\VueAllprojects\\practicevue\\copyvrent6\\vlogin2\\src\\views\\Dashboard.vue?vue&type=template&id=22ba47ca&scoped=true&","dependencies":[{"path":"G:\\VueAllprojects\\practicevue\\copyvrent6\\vlogin2\\src\\views\\Dashboard.vue","mtime":1637395134590},{"path":"G:\\VueAllprojects\\practicevue\\copyvrent6\\vlogin2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\VueAllprojects\\practicevue\\copyvrent6\\vlogin2\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"G:\\VueAllprojects\\practicevue\\copyvrent6\\vlogin2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\VueAllprojects\\practicevue\\copyvrent6\\vlogin2\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}